name: CI/CD - TP2 with ACR & ACA

on:
  push:
    branches: [ main ]

jobs:
  # Étape 1 : Build & Test
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t tp2-cicd-app .

  # Étape 2 : Déploiement sur STAGING
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authentification à Azure avec le Service Principal
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Déploiement vers Azure Container Apps - STAGING
      - name: Deploy to Azure Container Apps (staging)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name aca-tp2-staging \
              --resource-group rg-tp2 \
              --image acrwe123.azurecr.io/tp2-cicd:latest

  # Étape 3 : Déploiement sur PROD
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authentification à Azure avec le Service Principal
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Déploiement vers Azure Container Apps - PROD
      - name: Deploy to Azure Container Apps (prod)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name aca-tp2-prod \
              --resource-group rg-tp2 \
              --image acrwe123.azurecr.io/tp2-cicd:latest
